@model ShopManagementSystem.Models.LoginViewModel

@{
    ViewBag.Title = "Log in";
}

<style>
    #loginButton {
        background-color: #03A9F4;
        color: white;
        padding: 14px 20px;
        margin: 8px 0;
        border: none;
        cursor: pointer;
        width: 100%;
    }

    #loginButton:hover {
        opacity: 0.8;
    }

    .imgcontainer {
        text-align: center;
        margin: 24px 0 12px 0;
    }

    #avatar {
        width: 15%;
        border-radius: 50%;
    }

    h2 {
        background-color: #0288D1;
        margin: 0;
        padding-top: 18px;
        padding-bottom: 18px;
        padding-left: 5px;
        color: white;
    }

    .error-message {
        color: red;
    }
</style>

<h2>Shop Management System - @ViewBag.Title.</h2>
<div class="row">
    <div class="col-md-8">
        <section id="loginForm">
            @using (Html.BeginForm("Login", "Account", new {ReturnUrl = ViewBag.ReturnUrl}, FormMethod.Post, new {@class = "form-horizontal", role = "form"}))
            {
                @Html.AntiForgeryToken()
                <h4>Use a local account to log in.</h4>
                <hr/>
                @Html.ValidationSummary(true)
                <div class="form-group">

                    <div class="imgcontainer">
                        <img src="/Images/avatar.jpg" alt="Avatar" id="avatar">
                    </div>
                    <br/>

                    @Html.LabelFor(m => m.UserName, new {@class = "col-md-2 control-label"})
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.UserName, new {@class = "form-control", placeholder = "Enter User Name"})
                        @Html.ValidationMessageFor(m => m.UserName, null, new{@class="error-message"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new {@class = "col-md-2 control-label"})
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.Password, new {@class = "form-control", placeholder = "Enter Password"})
                        @Html.ValidationMessageFor(m => m.Password, null, new { @class = "error-message" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <div class="checkbox">
                            @Html.CheckBoxFor(m => m.RememberMe)
                            @Html.LabelFor(m => m.RememberMe)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input id="loginButton" type="submit" value="Log in" class="btn btn-default"/>
                    </div>
                </div>


                <br/>

                <p>No account? Then @Html.ActionLink("Register New Account", "Register", "Account", null, new { @class = "w3-bar-item w3-button w3-padding" })</p>
            }
        </section>
    </div>

    <div class="col-md-4">
        <h4>How to operate this?</h4>
        <hr/>
        <p>To use this software, you must Log in your account first.
            To Log in account, first you have to Register an account
            and log in by this account
            To know more details 
            @Html.ActionLink("Click Here", "Help","Home")</p>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}